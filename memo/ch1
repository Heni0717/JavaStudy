- 개발언어 역사
	-> A언어(1960, 입/출력, 문맥)
	-> B언어(1960, Bell사, A언어+기계식 데이터타입, 연산기능, 메소드)
	-> C언어(1970,  B언어+자료형 데이터타입, 자료구조)
	->  Java : 1990, C + 공통 실행환경(JVM), 클래스, 객체

- Java : 높은 안정성, 보안성, 대규모 앱 개발 가능, 다양한 개발 도구와 라이브러리
- JVM : 자바 가상 머신, 프로그램을 실행시키는 가상의 기기를 만들어주는 것
	ㄴ 바이트 코드 : 운영체제가 읽을 수 있는 코드(.class)
		+ 컴파일러 : Java 파일을 class로 변환해주는 변환기
	ㄴ 인터프리터 : 운영체제가 읽은 바이트 코드를 기계어로 번역
		ㄴ Jit 컴파일러 : 인터프리터의 효율을 높이는 서포터 해석기
	ㄴ 메모리 영역 : Java 데이터를 저장하는 영역(OS로부터 할당받은)
	ㄴ 클래스 로더 : .class 바이트 코드를 메모리 영역에 담는 운반기
	ㄴ 가비지 컬렉터 : 메모리 영역에서 사용하지 않는 데이터를 주기적으로 흡수



	// [JDK]
        // (1) compiler : .java -> .class
        // (2) JRE
        // (3) JDB : 디버깅

        // () : 소괄호, {} : 중괄호, [] : 대괄호
        // main 메소드, Java 앱(프로젝트)는 항상 main 메소드를 먼저 실행시킴(JVM의 규칙)
        // static : 이 프로그램이 시작될때 무조건 실행되는 녀석임을 표현
        // void : 출력값의 데이터 타입 -> 반환값 없음
        // (String[] args) : 메소드 시작 시 넘겨받을 데이터들(변수들) - 매개변수 자리 - input


    // 객체 : 특징(속성, 변수), 행동(메소드)
            // 하위객체 표현 : .
            // system의 out객체의 행동인 println()메소드를 실행하라는 것